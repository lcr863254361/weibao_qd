<mxEditor defaultGroup="group" defaultEdge="connector">
    <!--
        The following line is used to dynamically add a configuration hook for various backends.
        The hook must have an ASP.NET extension because IIS does not handle any other extensions.
        In the Dotnet and Java server examples, this hook is implemented so that it returns the
        required configuration for using a backend, namely, the diagrameditor-backend.xml
        in the java and dotnet directories, respectively.
     -->
    <ui>
        <add as="graph" element="graph_search"/>
        <add as="toolbar" element="toolbar_search"/>
        <resource basename="app/javascript/orientjs/extjs/TaskPrepareMgr/MxGraphEditor/Resources/mxApplication"/>
    </ui>
    <Array as="templates">
        <add as="connector">
            <Connector label="" href="">
                <mxCell edge="1">
                    <mxGeometry as="geometry" relative="1"/>
                </mxCell>
            </Connector>
        </add>
        <add as="rounded">
            <Roundrect label="节点" href="">
                <mxCell vertex="1" style="rounded">
                    <mxGeometry as="geometry" width="80" height="40"/>
                </mxCell>
            </Roundrect>
        </add>
        <add as="rhombus" >
            <Roundrect label="下潜作业" href="">
                <mxCell vertex="2" style="rhombus">
                    <mxGeometry as="geometry" width="80" height="40"/>
                </mxCell>
            </Roundrect>
        </add>
        <add as="open"><![CDATA[
			function (editor)
			{
				editor.open(mxUtils.prompt('Enter filename', 'workflow.xml'));
			}
		]]></add>
    </Array>
    <mxGraph as="graph" alternateEdgeStyle="verticalConnector" allowLoops="1" dropEnabled="1">
        <add as="isAutoSizeCell"><![CDATA[
			function(cell)
			{
				return mxUtils.isNode(this.model.getValue(cell), 'text');
			}
		]]></add>
        <add as="getTooltipForCell"><![CDATA[
			function(cell)
			{
				return '<b>'+cell.getAttribute('label')+
						'</b> ('+cell.getId()+')'+
						'<br>Style: '+cell.getStyle()+
						'<br>Connections: '+cell.getEdgeCount()+
						'<br>Children: '+cell.getChildCount();
			}
		]]></add>
        <add as="convertValueToString"><![CDATA[
			function(cell)
			{
				return cell.getAttribute('label');
			}
		]]></add>
        <mxStylesheet as="stylesheet">
            <add as="text">
                <add as="shape" value="rectangle"/>
                <add as="perimeter" value="rectanglePerimeter"/>
                <add as="fontSize" value="12"/>
                <add as="align" value="left"/>
                <add as="verticalAlign" value="top"/>
                <add as="shadow" value="0"/>
                <add as="strokeColor" value="none"/>
                <add as="fillColor" value="none"/>
                <add as="gradientColor" value="none"/>
            </add>
            <add as="defaultVertex" extend="text">
                <add as="shape" value="rectangle"/>
                <add as="fontSize" value="11"/>
                <add as="align" value="center"/>
                <add as="verticalAlign" value="middle"/>
                <add as="shadow" value="1"/>
                <add as="strokeColor" value="#eac74c"/>
                <add as="fillColor" value="#eac74c"/>
                <add as="gradientColor" value="white"/>
            </add>
            <add as="defaultEdge">
                <add as="shape" value="connector"/>
                <add as="fontSize" value="10"/>
                <add as="align" value="center"/>
                <add as="verticalAlign" value="middle"/>
                <add as="rounded" value="1"/>
                <add as="rhombus" value="1"/>
                <add as="labelBackgroundColor" value="white"/>
                <add as="strokeColor" value="#36393D"/>
                <add as="strokeWidth" value="2"/>
                <add as="edgeStyle" value="elbowEdgeStyle"/>
                <!--添加末尾箭头-->
                <add as="endArrow" value="classic"/>
            </add>
            <add as="verticalConnector">
                <add as="elbow" value="vertical"/>
            </add>
            <add as="straightConnector">
                <add as="shape" value="connector"/>
                <add as="endArrow" value="classic"/>
                <add as="edgeStyle">null</add>
            </add>
            <add as="arrowConnector">
                <add as="shape" value="arrow"/>
                <add as="fillColor" value="#eac74c"/>
                <add as="endSize" value="20"/>
                <remove as="edgeStyle"/>
            </add>
            <add as="rounded">
                <add as="rounded" value="1"/>
            </add>
            <add as="rhombus">
                <add as="shape" value="rhombus"/>
                <add as="perimeter" value="rhombusPerimeter"/>
            </add>
            <add as="hline">
                <add as="shape" value="line"/>
                <add as="strokeWidth" value="3"/>
                <add as="perimeter" value="rectanglePerimeter"/>
                <add as="fontColor" value="black"/>
                <add as="fontSize" value="10"/>
                <add as="align" value="center"/>
                <add as="verticalAlign" value="bottom"/>
                <add as="strokeColor" value="#36393D"/>
            </add>
        </mxStylesheet>
        <mxGraphModel as="model">
            <add as="valueForCellChanged"><![CDATA[
				function(cell, value)
				{
					var previous = null;

					if (value == null || isNaN(value.nodeType))
					{
						previous = cell.value.getAttribute('label');

						if (value == null)
						{
							cell.value.removeAttribute('label');
						}
						else
						{
							cell.setAttribute('label', value);
						}
					}
					else
					{
						previous = cell.value;
						cell.value = value;
					}

					return previous;
				}
			]]></add>
            <root>
                <Diagram label="My Diagram" href="http://www.mxgraph.com/" id="0">
                    <mxCell/>
                </Diagram>
                <Layer label="Default Layer" id="1">
                    <mxCell parent="0"/>
                </Layer>
            </root>
        </mxGraphModel>
    </mxGraph>
    <!--<mxDefaultToolbar as="toolbar">-->
        <!--<add as="connect" mode="connect" icon="app/javascript/orientjs/extjs/TaskPrepareMgr/MxGraphEditor/Images/connect.gif">-->
            <!--<![CDATA[-->
			<!--function (editor)-->
			<!--{-->
				<!--if (editor.defaultEdge != null)-->
				<!--{-->
					<!--editor.defaultEdge.style = null;-->
				<!--}-->
			<!--}-->
		<!--]]></add>-->
        <!--<add as="Rounded" template="rounded"-->
             <!--icon="app/javascript/orientjs/extjs/TaskPrepareMgr/MxGraphEditor/Images/rounded.gif"/>-->
        <!--&lt;!&ndash; 此处不能增加分割线，否则会导致键盘删除等快捷键失效&ndash;&gt;-->
        <!--<add as="fit" action="fit" icon="app/javascript/orientjs/extjs/TaskPrepareMgr/MxGraphEditor/Images/zoom.gif"/>-->
        <!--<add as="zoomIn" action="zoomIn" icon="app/javascript/orientjs/extjs/TaskPrepareMgr/MxGraphEditor/Images/zoomin.gif"/>-->
        <!--<add as="zoomOut" action="zoomOut"-->
             <!--icon="app/javascript/orientjs/extjs/TaskPrepareMgr/MxGraphEditor/Images/zoomout.gif"/>-->
        <!--<add as="actualSize" action="actualSize"-->
             <!--icon="app/javascript/orientjs/extjs/TaskPrepareMgr/MxGraphEditor/Images/zoomactual.gif"/>-->
    <!--</mxDefaultToolbar>-->

    <!--<mxDefaultPopupMenu as="popupHandler">-->
        <!--<add as="cut" action="cut" icon="app/javascript/orientjs/extjs/TaskPrepareMgr/MxGraphEditor/Images/cut.gif"/>-->
        <!--<add as="copy" action="copy" icon="app/javascript/orientjs/extjs/TaskPrepareMgr/MxGraphEditor/Images/copy.gif"/>-->
        <!--<add as="paste" action="paste" icon="app/javascript/orientjs/extjs/TaskPrepareMgr/MxGraphEditor/Images/paste.gif"/>-->
        <!--<separator/>-->
        <!--<add as="delete" action="delete" icon="app/javascript/orientjs/extjs/TaskPrepareMgr/MxGraphEditor/Images/delete.gif"-->
             <!--if="cell"/>-->
    <!--</mxDefaultPopupMenu>-->
</mxEditor>
